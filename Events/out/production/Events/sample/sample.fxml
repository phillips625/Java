<?import javafx.geometry.Insets?>
<?import javafx.scene.layout.GridPane?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Label?>
<?import javafx.scene.control.CheckBox?>
<?import javafx.scene.control.TextField?>

<!--Console applications are procedural driven - i.e they are start at the top and finish at the end of the code.
UI applications are event driven. UI applications first runs the initialization code and then waits for the user to feed
an input into it. The application will then run the code that handles that particular event. When the user exits the application,
then the clean up code will run and the application is ended. When the user interacts with a control, an even is raised on
the UI thread. If the UI finds an event handler that handles that event, it will run that code.-->

<GridPane fx:controller="sample.Controller"
          xmlns:fx="http://javafx.com/fxml" alignment="center" hgap="10" vgap="10">

    <!--The fx:id is used to retrieve the value in the text field so it can be displayed in the console. Then the
    id here must match the name of the field in the Controller class. -->
    <!--onKeyReleased is called when you take your fingers off the keyboard.-->
    <TextField fx:id="nameField" GridPane.rowIndex="0" GridPane.columnIndex="0"
               onKeyReleased="#handleKeyReleased"/>

    <!--onAction - links the button to the onButtonClicked method in the Controller class.-->
    <Button fx:id="helloButton" text="Say Hello" GridPane.rowIndex="1" GridPane.columnIndex="0"
    onAction="#onButtonClicked"/>
    <Button fx:id="byeButton" text="Say Bye" GridPane.rowIndex="1" GridPane.columnIndex="1"
    onAction="#onButtonClicked"/>
    <CheckBox fx:id="ourCheckBox" text="Clear the field after saying hello or bye" GridPane.rowIndex="2"
              GridPane.columnIndex="0" GridPane.columnSpan="2" onAction="#handleChange"/>
    <Label fx:id="ourLabel" text="Nothing has happened"  GridPane.rowIndex="3" GridPane.columnIndex="0"/>
</GridPane>